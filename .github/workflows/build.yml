# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: 
      - master
      - feature/*
  pull_request:
    branches:
      - master
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
        preferLatestVersion: true
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
    - name: Set default version
      run: echo "VERSION=${{ env.GitVersion_MajorMinorPatch }}.dev${{ env.GitVersion_BuildMetaData }}" >> $GITHUB_ENV
    - name: Set release version
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      run:  TAG=$(git describe --tags); if github.event.release.prerelease; then RELEASE=".pre"; else  RELEASE="";  fi; echo "VERSION=${TAG}${RELEASE}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
    - name: Build
      run: |
        echo "${{ env.VERSION }}" > version.txt
        ls ./
        python setup.py bdist_wheel
        ls ./dist
    - name: Publish package
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}